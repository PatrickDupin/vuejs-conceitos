{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/patrick/Documentos/VueProjects/vuejsBrasil/conceitos/eventos-e-metodos/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/patrick/Documentos/VueProjects/vuejsBrasil/conceitos/eventos-e-metodos/App.vue","mtime":1613595845746},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGZvY3VzID0gewogICAgaW5zZXJ0ZWQ6IChlbCkgPT4gewogICAgICAgIGVsLmZvY3VzKCk7CiAgICB9Cn0KZXhwb3J0IGRlZmF1bHQgewogICAgZGlyZWN0aXZlczogewogICAgICAgIGZvY3VzCiAgICB9LAogICAgZGF0YTogKCkgPT4gKHsKICAgICAgICBjdXJyZW50VGFzazogJycsCiAgICAgICAgc2hvd0xpc3Q6IGZhbHNlLAogICAgICAgIHRhc2tzOiBbCiAgICAgICAgICAgIHsgbmFtZTogJ0ZhemVyIG8gY3Vyc28nLCBpc0RvbmU6IGZhbHNlIH0KICAgICAgICBdCiAgICB9KSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBoYW5kbGVTaG93SGlkZUxpc3QgKCkgewogICAgICAgICAgICB0aGlzLnNob3dMaXN0ID0gIXRoaXMuc2hvd0xpc3Q7CiAgICAgICAgfSwKICAgICAgICBhZGRUYXNrICgpIHsKICAgICAgICAgICAgdGhpcy50YXNrcy5wdXNoKHsKICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuY3VycmVudFRhc2ssCiAgICAgICAgICAgICAgICBpc0RvbmU6IGZhbHNlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRUYXNrID0gJycKICAgICAgICB9LAogICAgICAgIGNvbXBsZXRlICh0YXNrKSB7CiAgICAgICAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLm1hcCh0ID0+IHsKICAgICAgICAgICAgICAgaWYgKHQubmFtZSA9PT0gdGFzay5uYW1lKSB7CiAgICAgICAgICAgICAgICAgICByZXR1cm4geyAuLi50LCBpc0RvbmU6ICF0LmlzRG9uZSB9CiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgcmV0dXJuIHsgLi4udCB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgcmVtb3ZlKHRhc2spIHsKICAgICAgICAgICAgdGhpcy50YXNrcyA9IHRoaXMudGFza3MuZmlsdGVyKHQgPT4gdC5uYW1lICE9PSB0YXNrLm5hbWUpOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n    <div>\n        <h1>Minha lista de tarefas!</h1>\n        <button @click=\"handleShowHideList\"> Ver a lista! </button>\n        <br>\n        <input \n            type=\"text\"\n            v-focus\n            v-model=\"currentTask\"\n            @keyup.enter=\"addTask\">\n\n        <ul v-if=\"showList\">\n            <li \n                v-for=\"(task, index) in tasks\" \n                :key=\"`${task}-${index}`\" \n                @dblclick=\"complete(task)\" \n                class=\"task-item\" \n                :class=\"{ 'line-through': task.isDone }\">\n                {{ task.name }}\n                <button @click=\"remove(task)\">&times;</button>\n            </li>\n        </ul>\n        <p v-else>Lista de tarefas escondidas</p>\n    </div>\n</template>\n\n<script>\nconst focus = {\n    inserted: (el) => {\n        el.focus();\n    }\n}\nexport default {\n    directives: {\n        focus\n    },\n    data: () => ({\n        currentTask: '',\n        showList: false,\n        tasks: [\n            { name: 'Fazer o curso', isDone: false }\n        ]\n    }),\n    methods: {\n        handleShowHideList () {\n            this.showList = !this.showList;\n        },\n        addTask () {\n            this.tasks.push({\n                name: this.currentTask,\n                isDone: false\n            });\n            this.currentTask = ''\n        },\n        complete (task) {\n            this.tasks = this.tasks.map(t => {\n               if (t.name === task.name) {\n                   return { ...t, isDone: !t.isDone }\n               }\n               return { ...t }\n            });\n        },\n        remove(task) {\n            this.tasks = this.tasks.filter(t => t.name !== task.name);\n        }\n    }\n}\n</script>\n\n<style scoped>\n.line-through {\n    text-decoration: line-through;\n}\n.task-item {\n    cursor: pointer;\n}\n</style>"]}]}